/*!
 * Nutrient Web SDK 1.8.0 (https://www.nutrient.io/sdk/web)
 *
 * Copyright (c) 2016-2025 PSPDFKit GmbH. All rights reserved.
 *
 * THIS SOURCE CODE AND ANY ACCOMPANYING DOCUMENTATION ARE PROTECTED BY INTERNATIONAL COPYRIGHT LAW
 * AND MAY NOT BE RESOLD OR REDISTRIBUTED. USAGE IS BOUND TO THE PSPDFKIT LICENSE AGREEMENT.
 * UNAUTHORIZED REPRODUCTION OR DISTRIBUTION IS SUBJECT TO CIVIL AND CRIMINAL PENALTIES.
 * This notice may not be removed from this file.
 *
 * PSPDFKit uses several open source third-party components: https://www.nutrient.io/legal/acknowledgements/web-acknowledgements/
 */
"use strict";(globalThis.webpackChunkNutrientViewer=globalThis.webpackChunkNutrientViewer||[]).push([[860],{60919:(e,t,r)=>{r.r(t),r.d(t,{Conformance:()=>o,GdPicture:()=>w,GdPictureWorker:()=>F,getBrowserSpawner:()=>S});var s=r(85409),n=r(25030);let o=function(e){return e[e.pdf_a_1a=0]="pdf_a_1a",e[e.pdf_a_1b=1]="pdf_a_1b",e[e.pdf_a_2a=2]="pdf_a_2a",e[e.pdf_a_2u=3]="pdf_a_2u",e[e.pdf_a_2b=4]="pdf_a_2b",e[e.pdf_a_3a=5]="pdf_a_3a",e[e.pdf_a_3u=6]="pdf_a_3u",e[e.pdf_a_3b=7]="pdf_a_3b",e[e.pdf_a_4=8]="pdf_a_4",e[e.pdf_a_4e=9]="pdf_a_4e",e[e.pdf_a_4f=10]="pdf_a_4f",e}({});const a="/create.pdf",i="/save.pdf",u="/create.docx",l="/save.docx",d="/templateData.json",c="undefined"!=typeof WorkerGlobalScope&&self instanceof WorkerGlobalScope;let f=null,p=null;function m(e){let t;(0,s.V1)(p,"GdPicture WebAssembly is not loaded.");for(var r=arguments.length,n=new Array(r>1?r-1:0),o=1;o<r;o++)n[o-1]=arguments[o];for(const e of n)t=Object.assign(n[0],e);const a=JSON.stringify({type:e,...t}),i=JSON.parse(p.CommandHandler(a));if(!i.success)throw new Error(i.errorReason+": "+i.errorMessage+"\n"+i.error);return i}class w{_mountCustomFonts(e,t){(0,s.V1)(f,"WebAssembly module not loaded."),f.FS.mkdir(t);{const r=c?f.FS.filesystems.WORKERFS:f.FS.filesystems.MEMFS;f.FS.mount(r,{blobs:e},t)}}async loadModule(e,t,r,s,o,a,i){const{Assemblies:u,Module:l}=await async function(e,t){if("string"==typeof e){const r="nutrient-viewer-lib/",s=`${r}gdpicture-aa63976b/jit`,n=`${r}gdpicture-aa63976b/aot`;let o,a;t?(o=`${e}${n}/initDotnet.js`,a=`${e}${n}`):(o=`${e}${s}/initDotnet.js`,a=`${e}${s}`);const{initDotnet:i}=await import(o);return i(a,((e,t,r,s,n)=>"blazor.boot.json"===t?fetch(r,{credentials:"same-origin"}):null))}throw new Error("GdPicture WASM loader not implemented")}(e,t);p=u.GdPictureWasm.API,f=l,m("gdpicture/setLicense",{origin:r},{licenseKey:s||"DEMO_PSPDFKIT_WEB"});const d=o?"/fonts":"";if(o&&!f.FS.analyzePath(d).exists&&(this._mountCustomFonts(o,d),m("gdpicture/setFonts",{fontPaths:[d]})),a){const e=await(0,n.sw)(a);m("gdpicture/setDynamicFontLoading",{baseUrl:a.split("/").slice(0,-1).join("/"),allowedFonts:e.availableFonts,v:1})}i&&m("gdpicture/setFontSubstitutions",{fontSubstitutions:i})}toPdf(e,t,r){f.FS.writeFile(a,new Uint8Array(e));const s={file:i,format:"pdf",conformance:t&&t in o?t:void 0,officeConversionSettings:b(r)};try{return m("gdpicture/process",{input:{file:a},output:s}),f.FS.readFile(i).buffer}finally{try{f.FS.unlink(i)}catch(e){}}}toOffice(e,t){f.FS.writeFile(a,new Uint8Array(e));const r=`/save.${t}`;try{return m("gdpicture/process",{input:{file:a},output:{file:r,format:t}}),f.FS.readFile(r).buffer}finally{try{f.FS.unlink(r)}catch(e){console.log(e.message)}}}async populateDocumentTemplate(e,t){let r;f.FS.writeFile(u,new Uint8Array(e));try{r=JSON.stringify(t,null,2)}catch(e){throw new Error("Invalid config data")}f.FS.writeFile(d,r);try{return m("gdpicture/process-office-template",{inputFile:u,modelAndConfigFile:d,outputFile:l}),f.FS.readFile(l).buffer}finally{try{f.FS.unlink(l),f.FS.unlink(d)}catch(e){console.log(e.message)}}}}const h={allMarkup:0,simpleMarkup:1,noMarkup:2,original:3},_=h.noMarkup,g={documentMarkupMode:_};function b(e){if(!e)return g;if(!e.documentMarkupMode)return{...e,documentMarkupMode:_};if(!(e.documentMarkupMode in h))throw new Error(`Invalid documentMarkupMode value: ${e.documentMarkupMode}. Allowed values are: ${Object.keys(h).join(", ")}`);return{...e,documentMarkupMode:h[e.documentMarkupMode]}}var y=r(67136);const F=class{constructor(e){let{baseUrl:t,aot:r,mainThreadOrigin:n,licenseKey:o,customFonts:a,dynamicFonts:i,fontSubstitutions:u,workerSpawner:l,wasmLoaderPath:d}=e;(0,y.A)(this,"requests",new Map),(0,y.A)(this,"nextRequestId",1),(0,y.A)(this,"handleMessage",(e=>{const t=e.data,r=this.requests.get(t.id);(0,s.V1)(r,`No request was made for id ${t.id}.`);const{resolve:n,reject:o}=r;if(this.requests.delete(t.id),t.error){const e=new s.uE(t.error);e.callArgs=t.callArgs,o(e)}else n(t.result)})),this.workerSpawner=l,this.workerSpawner.setMessageHandler(this.handleMessage),this.moduleLoadPromise=this.sendRequest("loadModule",[d?{baseUrl:t,wasmLoaderPath:d}:t,r,n,o,a,i,u])}toOffice(e,t){return this.sendRequest("toOffice",[e,t])}toPdf(e,t,r){let s;return t&&(s=t.replace("pdf","pdf_").replaceAll("-","_")),this.sendRequest("toPdf",[e,s,r])}async populateDocumentTemplate(e,t){return this.sendRequest("populateDocumentTemplate",[e,t])}destroy(){this.workerSpawner?.terminate(),this.workerSpawner=null}async sendRequest(e,t){(0,s.V1)(this.workerSpawner,"GdPictureClient has been destroyed"),this.moduleLoadPromise&&await this.moduleLoadPromise;const r=this.workerSpawner;return new Promise(((s,n)=>{const o=this.assignId(),a=[...t].filter((e=>e instanceof ArrayBuffer));r.postMessage({id:o,action:e,args:t},a),this.requests=this.requests.set(o,{resolve:s,reject:n})}))}assignId(){const e=this.nextRequestId;return this.nextRequestId=this.nextRequestId+1,e}};const S=async function(){let e;if(!(arguments.length>0&&void 0!==arguments[0])||arguments[0]){const{default:t}=await r.e(11).then(r.bind(r,37979));e=new t}else e=new Worker(new URL(r.p+r.u(374),r.b));return{setMessageHandler(t){(0,s.V1)(e,"Worker is null"),e.onmessage=t},postMessage(t,r){e?.postMessage(t,r)},terminate(){e?.terminate(),e=null}}}}}]);